- name: newrelic | check for license
  fail: msg="New Relic license is required"
  when: newrelic.license is not defined or not newrelic.license

## Debian

- name: newrelic | check for new relic system
  stat: >
    path=/etc/init.d/newrelic-sysmond
  register: newrelic_system

- name: newrelic | get the key
  apt_key: >
    url=https://download.newrelic.com/548C16BF.gpg
    id=548C16BF
    state=present

- name: newrelic | add the repository
  copy: >
    content="deb http://apt.newrelic.com/debian/ newrelic non-free" 
    dest=/etc/apt/sources.list.d/newrelic.list
  register: newrelic_repo

- name: newrelic | updates apt cache
  apt: update_cache=yes
  when: newrelic_repo.changed

## Server Agent

- name: newrelic | installs the system agent
  apt: >
    pkg=newrelic-sysmond
    state=latest
  when: not newrelic_system.stat.exists
  register: newrelic_apt

- name: newrelic | configure the system agent
  template: >
    src=nrsysmond.cfg.j2
    dest=/etc/newrelic/nrsysmond.cfg 
    backup=yes 
    group=newrelic 
    owner=root 
    mode=0640
  register: newrelic_config

- name: newrelic | restart new relic
  service: >
    name=newrelic-sysmond 
    state=restarted
  when: newrelic_apt.changed or newrelic_config.changed

## PHP Agent

- name: newrelic | check for new relic php
  stat: >
    path=/etc/php5/conf.d/newrelic.ini
  register: newrelic_php

- name: newrelic | installs the php agent
  apt: >
    pkg=newrelic-php5
    state=latest
  when: >
    newrelic.php is defined and 
    newrelic.php == 1 and
    php is defined and 
    php.install == 1 and

# newrelic-install purge ; uninstalls

- name: newrelic | configure the php agent
  template: >
    src=newrelic.ini.j2
    dest=/etc/php5/conf.d/newrelic.ini
    backup=yes 
    group=newrelic 
    owner=root 
    mode=0640
  register: newrelic_ini
  when: >
    newrelic.php is defined and 
    newrelic.php == 1 and
    php is defined and 
    php.install == 1 and
    not newrelic_php.stat.exists

- name: newrelic | restart apache webserver
  service: >
    name=apache2
    state=restarted
  when: >
    apache is defined and 
    apache.install == 1 and
    newrelic_ini.changed

- name: newrelic | restart nginx webserver
  service: >
    name=nginx
    state=restarted
  when: >
    nginx is defined and 
    nginx.install == 1 and 
    newrelic_ini.changed

## Node Agent

- name: newrelic | installs the node agent
  npm: >
    name=newrelic
    global=yes
    state=latest
  when: >
    newrelic.node is defined and 
    newrelic.node == 1 and
    node is defined and 
    node.install == 1

#Copy newrelic.js from node_modules/newrelic into the root directory of your application
#Set a value for app_name
#Replace the license_key value with your New Relic license key from Step 2
#Make this the first line of your app's startup script: require('newrelic');

#- name: newrelic | configures the node agent
